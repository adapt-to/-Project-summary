=============
04_做的其他工作
=============

1. 项目仪器选型
=============

基于项目的框图调研本项目需要使用到的设备仪器：

.. image:: ./project.png

.. note::
    1. 图中关键设备在于ARM主控模块，它的作用是让PC通过以太网口与多个设备进行联系，以达到通信的目的
    2. 图中的VOA是受电信号的控制，这部分的实现可结合FPGA和光强度调制器完成
    3. 图中的信号源模块可以直接由FPGA的内时钟给定，其目的是所有时序的器件使用一个全局时钟

1.1 具体调研仪器设备
-------------

基于上述提到的ARM主控模板，其作用是通过PC的一个网口出来，能够连接控制多个设备。
具体形式可以参考国盾的该设备仪器：

.. image:: ./guodun_1.jpg

.. image:: ./guodun1.png

从上图中可以看出，该设备后部是由多个插槽组成的，将不同的硬件设备插入，通过插入网口后，即可在PC上进行控制。

1.1.1 以太网交换机
+++++++++++

通过以上的论述，要实现ARM主控模块同等的功能，即可以使用以太网交换机来实现。

.. note::
    交换机
    
    交换机Switch，工作在数据链路层（第二层），稍微高端一点的交换机都有一个操作系统来支持。和集线器一样主要用于连接计算机等网络终端设备。 
    交换机比集线器更加先进，允许连接在交换机上的设备并行通讯，好比高速公路上的汽车并行行使一般，设备间通讯不会再发生冲突，因此交换机打破了冲突域，交换机每个接口是一个冲突域，不会与其他接口发生通讯冲突。 
    并且有系统的交换机可以记录MAC地址表，发送的数据不会再以广播方式发送到每个接口，而是直接到达目的接口，节省了接口带宽。但是交换机和集线器一样不能判断广播数据包，会把广播发送到全部接口，所以交换机和集线器一样连接了一个广播域网络。 
    高端一点的交换机不仅可以记录MAC地址表，还可以划分VLAN（虚拟局域网）来隔离广播，但是VLAN间也同样不能通讯。要使VLAN间能够通讯，必须有三层设备介入。 

关于以太网交换机我在网上调研了一些大厂的产品，最终选定型号为：TP-Link TL-SG3210 8口千兆网管型网络交换机

.. image:: ./TPlink.png

优势：背板宽带大，数据转发速度快；组网灵活，应用在大中型网络的接入层；支持VLAN划分，可以有针对性地对网络进行控制；网管型交换机的数据丢失率、延迟率低。

报价：499RMB（淘宝有售）

用途：让一台PC上位机能够和多台设备进行以太网通信

.. warning::
 使用交换机的难点是需要自己完成通信协议，通过一个通信协议使得PC和FPGA能够相互识别对面的数据含义。通过网口发送的数据是通过数据帧的形式发出，每一帧的数据中包含协议头信息+真正的数据信息+协议结束标志等信息。
 同时由于本项目是针对于多协议的，所以还需要在数据帧里区分不同的协议，以便让FPGA内部做出不同的操作。

1.1.2 标准型多路电控光衰减器
+++++++++++++++

在这里我调研了多款电控的光衰减器。具体有以下几种（点击可访问查看）：

 1. `华泰Huatai VOA500系列 <http://www.catvworld.net.cn/products/attenuator/voa700/index.htm>`_ （杭州华泰） 
 2. `微处理器补偿型数控MEMS衰减器 <http://www.quantum-info.com/product/coredevice/2017/0504/120.html>`_ （国盾量子）
 3. `OZ电控可调光衰减器 <http://www.rayscience.com/product-13480.html>`_ （瞬渺光电）

最后与杜聪协商，他建议利用IM替代电控光衰减器，一方面是实验室现有，第二是体积小，方便以后封装。

.. note::

 同时我也在网上查阅到：
 有些衰减器中的衰减是由电信号控制的，如果衰减调节非常快速，该器件实际上可以看做是光调制器（任意光学强度调制器都可以看做是可变衰减器）

并且在潘建伟小组的关于MDI的论文中也是利用IM串联的方式替代光衰减器，如下：

.. image:: ./MDI.png


1.2 项目设备清单
-------------

    1.	激光器（已有 ，型号：QCL-102 皮秒脉冲激光器）
    2.	以太网交换机（需购入， 型号上述已给出）
    3.	PC（已有， 预装python软件的电脑即可）
    4.	FPGA板（已有，不过可能还需购入，型号：AX530）
    5.	强度调制器（已有，至少需要3个 型号：LN81S-FC）
    6.	分束器（已有，型号：BS-0x）
    7.	固定光衰减器（已有，型号SM3301，利用可编程光衰减器替代固衰）


1.3 实现难点
------------

整体项目的实现难点主要是以下几点：

 1. PC与以太网的交互协议需要自己编写，通过PC与硬件设备的自协商协议达到以太网通信的目的（这部分需要参考一些以太网通信的书籍）
 2. 如果验证诱骗态是否符合预期给定（① 利用强光的方法，在未衰减前检测诱骗态的占比 ② 利用单光子探测的方法，对于不同的平均光子数，对应区段的单光子计数不一样，不过这部分需要有能够从单光子探测器中取出对应计数的电路支持）
 3. 如果确定含诱骗态的准单光子源的起点位置（还需考虑，可以查阅其他文章或者专利是否有该问题的解决办法）

1.4 创新点整理
-------------

 1. 兼容多协议（BB84,COW）的系统方法
 2. 多路衰减器控制诱骗态平均光子数的方法
 3. 软硬件结合及自动化控制系统的方法
 4. 适用于多协议的软件内部处理创新算法


2. PC与FPGA的以太网通信
=====================

2.1 预期目标
-------------

 1. *FPGA* 和 *PC* 通过 *UDP* 协议通信
 2. 数据传输为单项传输， *PC* 发送，*FPGA* 接收
 3. 发送的数据为 *PC* 端制备的随机数

2.2 目标选型
-------------

目标选型具体阐述已在 :doc:`此部分 <random_voltage>` 给出，这里简单给出本节所用设备型号：
 1. *FPGA* -- 黑金 *AX530*
 2. *PC* -- *win10* 电脑
 3. 网线

2.3 通信方式
----------------

*PC* 如何与 *FPGA* 的通信方式有很多中，根据 *FPGA* 的型号而定，就本项目所使用的 *FPGA*(*AX530*)而言，通信方式不外乎有以下几种：
 1. 利用USB的串口通信 ———— 速度在百兆左右
 2. 利用以太网的网口通信 ———— 速度有百兆和千兆两个量级。
  .. note::
   其中由传输协议又细分为 *TCP* 协议和 *UDP* 协议
   
   *TCP* 协议需要使用多次握手确定双方的连接关系，是一种安全的通信方式，并且由于建立了通信双方的连接，
   故传输的数据不会丢失，缺点是速度较 *UDP* 协议慢
   
   *UDP* 协议是面向无连接的协议，即发送方只管发送信息，接收方只管接收信息。是一种适用于高速传输的场景中，例如：视频直播、网络游戏、聊天软件等都是利用了 *UDP* 协议。
   它会存在一定的丢包率，不过由于传输速率很快，所以较少的丢包并不会影响整体。


2.4 UDP协议
-------------

.. note:: 
 *UDP* 协议全称为（*User Datagram Protocol*），即用户数据报协议。*UDP* 协议是一种基本的、低延迟的数据报的通讯。数据报就是一种自带寻址信息，从发送端到接收端的数据包。
 其常用于图像传输、网络监控数据交换等数据传输速度要求比较高的场合。

 更多关于 *UDP* 协议知识，请访问 `UDP百科 <https://baike.baidu.com/item/UDP>`_

基于本开发板的板上资源，通信协议采用 *Ethernet UDP* 通信协议，*FPGA* 通过 *GMII* 总线和开发板上的 *Gigabit PHY* 芯片通信，*Gigabit PHY* 芯片再把数据通过网线发送给 *PC*。
传输示意图如下：

.. image:: ./kuangtu.png

在本开发板（AX530）中，采用 *Realtek* 千兆 *GPHY* 芯片 *RTL8211E* 来实现 **千兆以太网数据通信**。该芯片能够自动选择传输速率，
当网口连接到千兆以太网时，*FPGA* 通过 *GMII* 总线和 *PHY* 芯片进行数据通信；当网口连接到百兆以太网时，*FPGA* 通过 *MII* 总线和 *PHY* 芯片进行数据通信。

.. note::
 这里的千兆以太网和百兆以太网，还应根据具体电脑配置是否支持千兆以太网来判断，不过目前大部分电脑已支持千兆网口。

*FPGA* 通过 *MDI*/*MDIO* 管理接口来配置或读取 *PHY* 芯片内部的寄存器。

--------------------------------------------------------------------

2.5 FPGA如何实现
-----------------

上面讲到，FPGA中的芯片会根据 *Link* 的具体是千兆还是百兆自动选择，所以在千兆通信或百兆通信，引脚触发是不一样的。

 1. 在千兆的 *GMII* 通信模式下，发送数据时，发送时钟为125 *Mhz* 的 *GTXC* 信号，数据有效信号为 TXEN，；接收数据时，接收时钟为125 *Mhz* 的RXC信号，数据有效信号为 *RXDV*
 2. 在百兆的 *MII* 通信模式下，发送数据时，发送时钟为25 *Mhz* 的 *TXC* 信号，数据有效信号为 TXEN，；接收数据时，接收时钟为25 *Mhz* 的RXC信号，数据有效信号为 *RXDV*

 更多关于 *GMII* 和 *MII* 通信模式请参考： `MII、GMII接口详细介绍 <https://blog.csdn.net/reille/article/details/6312156>`_

2.5.1 verilog实现
++++++++++++++++

因为本节实现的功能主要是 *FPGA* 和 *PC* 利用 *UDP* 协议进行单向的数据传输 （*PC* 发，*FPGA* 收）。
所以在 *verilog* 代码，项目主要由以下几个模块构成：
 1. 顶层模块 ---- 例化其他子模块
 2. *UDP* 接收模块 ---- 接收由 *PC* 发送的数据
 3. *CRC* 校验模块 ---- 对接收的数据进行错误校验，如发现错误就抛弃数据包
 4. *UDP* 测试模块 ---- 进行代码测试

具体的代码，用户手册中有具体给出，这里就不一一列举。

2.5.2 验证接收
+++++++++++++

如何验证是否接收到，这里需要用到工具--网络调试助手

